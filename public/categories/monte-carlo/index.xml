<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monte-Carlo on 浑身蟹数</title>
    <link>https://www.xiebro.cool/categories/monte-carlo/</link>
    <description>Recent content in Monte-Carlo on 浑身蟹数</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.xiebro.cool/categories/monte-carlo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>KL散度模拟</title>
      <link>https://www.xiebro.cool/post/kullback-leibler/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/kullback-leibler/</guid>
      <description>从采样角度出发对KL散度进行直观解释,即：KL散度描述了我们用分布Q来估计数据的真实分布P的信息(编码)损失。&#xA;附：一篇关于Kullback-Leibler Divergence 基本介绍的blog&#xA;验证问题 假如真实样本P已知，Q是对P的随机采样样本，那么Q相对于P的信息损失是否与采样样本量呈线性关系？&#xA;换句话讲，假如Q的样本量与P相等，那么Q可以100%程度表述P的信息，假如Q的样本量是P的10%呢？此时是否会相较于前者损失90%的信息？即KL散度与样本量是否是线性的关系？&#xA;模拟验证 library(tidyverse) library(furrr) library(hrbrthemes) theme_set(theme_ipsum(base_family = &amp;#34;Kai&amp;#34;, base_size = 8)) plan(multisession, workers = 10) set.seed(42) # 模拟总体样本P P &amp;lt;- rbinom(10000, 1, 0.1) cat(paste0(&amp;#34;总体样本P的样本量：&amp;#34;, length(P),&amp;#34;, 均值:&amp;#34;, mean(P))) ## 总体样本P的样本量：10000, 均值:0.1031 # bootstrap估计P的均值分布 trials &amp;lt;- 10000 P_norm &amp;lt;- 1 : trials |&amp;gt; future_map_dbl(~ { P |&amp;gt; sample(replace = TRUE) |&amp;gt; mean() }) cat(paste0(&amp;#34;P的均值分布参数: μ = &amp;#34;, mean(P_norm), &amp;#34;, σ = &amp;#34;, sd(P_norm))) ## P的均值分布参数: μ = 0.</description>
    </item>
    <item>
      <title>P-Value的可靠性模拟</title>
      <link>https://www.xiebro.cool/post/2024-05-25-p-value/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/2024-05-25-p-value/</guid>
      <description>要验证的问题： 在不同的实验条件下，我们使用P值衡量两组样本的差异显著性，是否是可靠的？ 举个例子，假如以下都是正态分布的样本：&#xA;当样本量及参数(μ、σ)不变，仅改变随机种子，多次得到的P值结果是否是稳定的？ 当随机种子和样本参数(μ、σ)均不变，仅改变样本量，所得到P值结果是否是稳定的？ &amp;hellip; 当改变了样本的样本量、参数、以及随机种子时，分别对P值的影响如何？&#xA;进行模拟 library(tidyverse) library(infer) library(furrr) library(hrbrthemes) theme_set(theme_ipsum_rc()) plan(multisession, workers = 10) # 模拟两个分布并进行置换检验，得到均值差异和P值 run_simulate &amp;lt;- function(nsize, mudiff, sigma, seed){ set.seed(seed) base_mean &amp;lt;- 0.10 grp_A &amp;lt;- rnorm(nsize, mean = base_mean, sd = sigma) grp_B &amp;lt;- rnorm(nsize, mean = base_mean + mudiff, sd = sigma) obs &amp;lt;- mean(grp_A) - mean(grp_B) dat &amp;lt;- tibble(grp_A, grp_B) |&amp;gt; mutate(id = ids::random_id(n = n(), bytes = 2)) |&amp;gt; pivot_longer(cols = -id, names_to = &amp;#34;grp&amp;#34;, values_to = &amp;#34;score&amp;#34;) df &amp;lt;- dat |&amp;gt; specify(score ~ grp) |&amp;gt; hypothesise(null = &amp;#34;independence&amp;#34;) |&amp;gt; generate(reps = 1000, type = &amp;#34;permute&amp;#34;) |&amp;gt; calculate(stat = &amp;#34;diff in means&amp;#34;, order = c(&amp;#34;grp_A&amp;#34;, &amp;#34;grp_B&amp;#34;)) re &amp;lt;- list( diff_in_means = mean(df$stat), p_value = get_p_value(df, obs_stat = obs, direction = &amp;#34;left&amp;#34;)[[&amp;#34;p_value&amp;#34;]] ) return(re) } 先模拟两次 run_simulate(nsize = 30, mudiff = 0.</description>
    </item>
    <item>
      <title>“重男轻女”是否会导致男女比例失衡？</title>
      <link>https://www.xiebro.cool/post/only-want-boy/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/only-want-boy/</guid>
      <description>在一个严重受到“重男轻女”思想影响的村庄里，父母渴望拥有男孩，因此每当生下女孩时，他们就会不断地生育，直到有一天生下男孩为止。由于计划生育政策的限制，一旦有了男孩，就不能再生了。&#xA;那么，在这个村庄里的男女比例应该是怎样的？是否会偏向男性？&#xA;我们可以通过使用蒙特卡洛方法来模拟现实场景，计算出该村庄的男女比例。&#xA;simulate_once &amp;lt;- function(N, prob = 0.5, verbose = FALSE) { # nobody has anything yet... boys = 0; girls = 0; print_vars &amp;lt;- function() { message(&amp;#34;Boy-to-Girl Ratio: &amp;#34;, boys, &amp;#34; / &amp;#34;, girls) message(&amp;#34;====================================&amp;#34;) } tryonemore &amp;lt;- function(x, msgON) { if(msgON) message(x) # terminal condition: all 1 (boys) if (all(x)) { boys &amp;lt;&amp;lt;- boys + sum(x) if (msgON) print_vars() return(1) } # assign to parent env so that we can keep track boys &amp;lt;&amp;lt;- boys + sum(x) girls &amp;lt;&amp;lt;- girls + sum(!</description>
    </item>
    <item>
      <title>猜猜篮子里有多少苹果</title>
      <link>https://www.xiebro.cool/post/apple-basket/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/apple-basket/</guid>
      <description>问题场景 在一个桶里，有同等数量的红苹果与青苹果，但你并不知道具体数量。 你随机抽取了 19 个，发现拿了红苹果 8 个，青苹果 11 个。 针对刚才桶里苹果的总数量（红与青之和），最好的猜测是多少？ 注：为了卫生起见，拿出任何一个苹果后就不准再放回桶里。 这是一个参数估计的概率问题，具体来说是通过已知的样本信息来估计总体参数的值。&#xA;在这个情景中，我们知道从一个桶中抽取了19个苹果，其中8个是红色的，11个是青色的。我们并不知道桶中到底有多少个苹果，但我们想要估计红色和青色苹果的总数量。&#xA;因此，我们需要考虑在不同假设下（桶中红色苹果的数量），得到观察样本的概率。然后，我们找到使得这一概率最大化的假设，即我们的最佳估计。&#xA;换句话说就是：当篮子里有多少个苹果时，你有最大的概率会抽到8红11青。&#xA;所以我们可以通过蒙特卡洛模拟计算：&#xA;当篮子里有11个红(或青)苹果时（即总共22个），抽到8红11青的概率是p11 当篮子里有12个红(或青)苹果时（即总共24个），抽到8红11青的概率是p12 &amp;hellip;&amp;hellip; 当篮子里有n个红(或青)苹果时（即总共2n个），抽到8红11青的概率是pn Monte-Carlo Simulation library(purrr) # 场景复刻 nn_size = 19 nn_red = 8 nn_green = 11 # 生成一个装有2n个苹果的篮子(0:红, 1:青) generate_bin &amp;lt;- function(n) { rep.int(c(0L, 1L), n) } # 实验设计 run_experiment &amp;lt;- function(n, trials = 10e3) { if (n &amp;lt; max(nn_red, nn_green)) return(0L) reps &amp;lt;- replicate( trials, n |&amp;gt; # 生成篮子 generate_bin() |&amp;gt; # 随机不放回抽样 sample(size = nn_size, replace = FALSE) |&amp;gt; # 判断结果是否符合预期 sum() == nn_green ) # 预期结果出现的概率=预期结果出现的次数/总抽样次数 sum(reps) / trials } # 实验进行 set.</description>
    </item>
  </channel>
</rss>
