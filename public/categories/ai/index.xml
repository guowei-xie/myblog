<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on 浑身蟹数</title>
    <link>https://www.xiebro.cool/categories/ai/</link>
    <description>Recent content in AI on 浑身蟹数</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 24 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.xiebro.cool/categories/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>玩AI：基于Rshiny&#43;LLM开发的自然语言取数工具</title>
      <link>https://www.xiebro.cool/post/io-the-wisp/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/io-the-wisp/</guid>
      <description>DEMO ➫ 🔗 io-the-wisp&#xA;Github ➫ 🔗 guowei-xie/io-the-wisp&#xA;项目简介 基于Rshiny+LLM开发的自然语言取数工具，通过调用Gemini的 API接口将自然语言转换为SQL指令，从数据库中提取数据并展示到前端。&#xA;使用流程 1. 配置config.yml 配置主路径下的config.yml文件，具体参照如下示例：&#xA;default: seed: 123 # no use # 数据库连接配置，项目默认使用Mysql数据库，将“xxxx”替换为你的实际连接配置 database: host: xxxxxx user: xxxxxx pwd: xxxxxx database: xxxxxx port: xxxxxx # 默认连接database中配置的数据库，进行建表和插入数据 # 用于记录用户查询结果，方便后续有针对性的优化prompt cache: dbname: xxxxxx tblname: &amp;#34;io_the_wisp_propmt&amp;#34; # 默认的表名，也可以自定义 # 模型参数配置 gemini: api_token: &amp;#34;xxxxx&amp;#34; # 替换为你的Gemini API token domain: &amp;#34;https://generativelanguage.googleapis.com/v1beta/models/&amp;#34; # Gemini接口 text_model: &amp;#34;gemini-pro:generateContent&amp;#34; # 选用文本生成模型 temperature: 0 topK: 1 topP: 1 maxOutputTokens: 2048 embedding_model: &amp;#34;embedding-001:embedContent&amp;#34; # 选用embedding模型 # prompt模板相关配置 template: folder: templates # prompt模板存放位置 embeddings: embeddings.</description>
    </item>
    <item>
      <title>玩AI：趣味定时器，帮助同事喝水减肥</title>
      <link>https://www.xiebro.cool/post/water-clock/</link>
      <pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/water-clock/</guid>
      <description>我的同事们立志要“喝水减肥”，为了实现每天8杯水的目标，他们需要一个“定时提醒”。但只是提醒时间的话那未免有点太单调，如果接入大语言模型会不会让喝水这件事变得更加有趣，比如：&#xA;接下来，用R语言实现这个趣味定时器&amp;hellip;&#xA;配置文件 使用飞书自定义机器人来推送提醒消息，因此需要在群聊中创建机器人并获得webhook_url，具体参照&amp;raquo;飞书API文档&#xA;调用Gemini的文本生成模型，因此需要配置自己的api_key &amp;raquo;申请地址&#xA;设置触发提醒的时间，在这些时间点才会触发消息提醒&#xA;config.yml&#xA;default: # Gemini返回失败时的最大重复尝试次数 trials: 10 # 允许提醒的时间 crontab: - 10:00:00 - 11:00:00 - 14:00:00 - 15:00:00 - 16:00:00 - 17:00:00 - 18:00:00 - 19:00:00 - 20:00:00 webhook: # 替换成你自己的 - https://open.feishu.cn/open-apis/bot/v2/hook/xxxxx gemini: api: &amp;#34;https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=&amp;#34; token: &amp;#34;xxxxxxxxxxxxx&amp;#34; # 替换成你自己的key prompt: &amp;#34;用幽默有趣的方式,简短表达这段话：现在的时间是{current_time}，该喝一杯水了&amp;#34; R脚本 clock.R&#xA;library(config) library(httr) library(tidyverse) gemini &amp;lt;- function(prompt){ url &amp;lt;- paste0(cnf$api, cnf$token) headers &amp;lt;- c(&amp;#39;Content-Type&amp;#39; = &amp;#39;application/json&amp;#39;) body &amp;lt;- list( contents = list( list( parts = list( list( text = prompt ) ) ) ) ) response &amp;lt;- POST(url, body = body, encode = &amp;#34;json&amp;#34;, verbose()) msg &amp;lt;- content(response)[[&amp;#34;candidates&amp;#34;]][[1]][[&amp;#34;content&amp;#34;]][[&amp;#34;parts&amp;#34;]][[1]][[&amp;#34;text&amp;#34;]] return(msg) } send_msg &amp;lt;- function(msg, webhook){ print(msg) body &amp;lt;- list( msg_type = &amp;#34;text&amp;#34;, content = list(text = msg) ) response &amp;lt;- httr::POST(url = webhook, body = list(msg_type = &amp;#34;text&amp;#34;, content = list(text = msg)), encode = &amp;#34;json&amp;#34;, add_headers(&amp;#34;Content-Type&amp;#34; = &amp;#34;application/json&amp;#34;)) if(response$status_code !</description>
    </item>
  </channel>
</rss>
