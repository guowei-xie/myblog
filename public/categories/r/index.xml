<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on 浑身蟹数</title>
    <link>https://www.xiebro.cool/categories/r/</link>
    <description>Recent content in R on 浑身蟹数</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.xiebro.cool/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>“三门问题”模拟验证</title>
      <link>https://www.xiebro.cool/post/monty-hall/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/monty-hall/</guid>
      <description>“三门问题”，也叫作“蒙提·霍尔” 悖论，源自美国的一个电视游戏节目《让我们做个交易》； 游戏中，有三扇门供你选择，其中一扇门后面是一辆车（奖品），另外两扇门后面是山羊； 主持人“蒙提·霍尔”知道所有门后的答案，当你选择一扇门后，他会打开另外的一扇门，你看到门后是一只山羊； 此时他问你：“你想改变你最初的选择么？” 选择换门是否对你赢走奖品更有利？ # play a game of Monty Hall monty_hall &amp;lt;- function(verbose = FALSE) { doors &amp;lt;- c(1, 2, 3) prize &amp;lt;- sample(doors, 1) guess &amp;lt;- sample(doors, 1) open &amp;lt;- doors[!doors %in% c(prize, guess)][1] if (verbose) { cat(paste(&amp;#34;Prize:&amp;#34;, prize, &amp;#34;/ Guess:&amp;#34;, guess, &amp;#34;/ Open:&amp;#34;, open, &amp;#34;\n&amp;#34;)) } has_switch &amp;lt;- doors[!doors %in% c(guess, open)][1] no_switch &amp;lt;- guess return(list(&amp;#34;switch&amp;#34; = has_switch == prize, &amp;#34;noSwitch&amp;#34; = no_switch == prize)) } monty_hall(TRUE) ## Prize: 2 / Guess: 3 / Open: 1 ## $switch ## [1] TRUE ## ## $noSwitch ## [1] FALSE set.</description>
    </item>
    <item>
      <title>SDID合成双重差分法</title>
      <link>https://www.xiebro.cool/post/sdid/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/sdid/</guid>
      <description>数据集 california_prop99.csv.csv&#xA;1989年，California实行了一项名为“99号提案”的选民倡议，该提案是美国第一个现代大规模烟草控制项目，该法案在后续引发了一系列关于室内清洁空气的地方立法； 美国各州从 1970 年开始有完整的香烟消费的数据，随着健康理念的深入，到2000 年大部分州也实施了禁烟措施。因此该案例的观察周期是从1970年至2000年之间。出于研究准确性的考虑，删除了部分州的数据，最后样本池中剩下38个州，数据集中包含了年份（Year），人均消费卷烟数（PacksPerCapita）。 library(tidyverse) dat &amp;lt;- read.csv(&amp;#34;datasets/california_prop99.csv&amp;#34;) dat &amp;lt;- dat |&amp;gt; pivot_wider(id_cols = &amp;#34;Year&amp;#34;, names_from = &amp;#34;State&amp;#34;, values_from = &amp;#34;PacksPerCapita&amp;#34;) dat |&amp;gt; glimpse() ## Rows: 31 ## Columns: 40 ## $ Year &amp;lt;int&amp;gt; 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,… ## $ Alabama &amp;lt;dbl&amp;gt; 89.8, 95.4, 101.1, 102.9, 108.2, 111.7, 116.2, 117.1,… ## $ Arkansas &amp;lt;dbl&amp;gt; 100.3, 104.1, 103.9, 108.0, 109.7, 114.8, 119.1, 122.… ## $ Colorado &amp;lt;dbl&amp;gt; 124.</description>
    </item>
    <item>
      <title>DID平行趋势检验</title>
      <link>https://www.xiebro.cool/post/mtp-did/</link>
      <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/mtp-did/</guid>
      <description>数据集 采用普林斯顿大学OscarTorres-Reyna教授构建的DID虚拟数据集进行演示分析，该数据集假设1994年在E、F、G三个国家实施了一项政策，并与相似的A、B、C、D四个国家为控制组。数据集共包含country、year、y、x1、 x2、 x3、 opinion 7个变量，其中y为被解释变量，x1-x3为连续型的自变量，opinion为分类型自变量。&#xA;library(dplyr) dat &amp;lt;- haven::read_dta(&amp;#34;http://dss.princeton.edu/training/Panel101.dta&amp;#34;) dat |&amp;gt; glimpse() ## Rows: 70 ## Columns: 9 ## $ country &amp;lt;dbl+lbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2… ## $ year &amp;lt;dbl&amp;gt; 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 19… ## $ y &amp;lt;dbl&amp;gt; 1342787840, -1899660544, -11234363, 2645775360, 3008334848, 32… ## $ y_bin &amp;lt;dbl&amp;gt; 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,… ## $ x1 &amp;lt;dbl&amp;gt; 0.</description>
    </item>
    <item>
      <title>DID结果的显著性</title>
      <link>https://www.xiebro.cool/post/2024-04-02-bootstrap-did/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/2024-04-02-bootstrap-did/</guid>
      <description>构造演示数据 library(tidyverse) # Generate dummy data ---- set.seed(42) # number of observations enroll = 5000 generate_vector &amp;lt;- function(N, prob1, prob2) { term &amp;lt;- c(rep(&amp;#34;term1&amp;#34;, N), rep(&amp;#34;term2&amp;#34;, N)) befr &amp;lt;- rbinom(N, size = 1, prob = prob1) aftr &amp;lt;- rbinom(N, size = 1, prob = prob2) # return data.frame(term = term, renewal = c(befr, aftr)) } grpA &amp;lt;- generate_vector(enroll, .10, .11) grpB &amp;lt;- generate_vector(enroll, .11, .13) # working data frame df &amp;lt;- bind_rows(grpA, grpB, .</description>
    </item>
    <item>
      <title>PSM倾向性得分匹配</title>
      <link>https://www.xiebro.cool/post/psm/</link>
      <pubDate>Sun, 31 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/psm/</guid>
      <description>背景目标 A为对照组，B为实验组; A组和B组样本的特征分布不均匀，无法直接使用随机对照实验中的显著性检验; 利用PSM方法消除A组与B组样本的差异（只能在已知特征范围内），近似地创造随机对照实验环境。 模拟数据集 set.seed(123) # generate group A n_a &amp;lt;- 1500 dat_A &amp;lt;- data.frame(age = rnorm(n_a, mean = 50, sd = 10), gender = sample(c(&amp;#34;Male&amp;#34;, &amp;#34;Female&amp;#34;), size = n_a, replace = TRUE), health = rnorm(n_a, mean = 0, sd = 1), income = rnorm(n_a, mean = 50000, sd = 10000), education = sample(c(&amp;#34;High School&amp;#34;, &amp;#34;Bachelor&amp;#39;s Degree&amp;#34;, &amp;#34;Master&amp;#39;s Degree&amp;#34;, &amp;#34;PhD&amp;#34;), size = n_a, replace = TRUE), treatment = rep(0, n_a) # A组均未参与实验 ) # generate group B n_b &amp;lt;- 500 dat_B &amp;lt;- data.</description>
    </item>
    <item>
      <title>异常值检测</title>
      <link>https://www.xiebro.cool/post/anomaly-detection/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/anomaly-detection/</guid>
      <description>library(tidyverse) library(hrbrthemes) theme_set(theme_ipsum(base_family = &amp;#34;Kai&amp;#34;, base_size = 8)) Dummy Data with Outliers set.seed(1234) N = 1e3 x = c(rnorm(N, 0, 0.5), rnorm(N * 0.05, -1, 1)) y = c(rnorm(N, 0, 0.5), rnorm(N * 0.05, 1, 1)) o = c(rep(0L, N), rep(1L, (N * 0.05))) mm &amp;lt;- matrix(x, y, nrow = N * 1.05, ncol = 2) dat &amp;lt;- tibble(x, y, outlier = o) dat |&amp;gt; ggplot(aes(x, y, col = factor(o))) + geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + geom_point(alpha = 0.</description>
    </item>
    <item>
      <title>结构比率归因</title>
      <link>https://www.xiebro.cool/post/twofactor/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/twofactor/</guid>
      <description>在一些工作场景当中，比如渠道广告投放，假如这月与上月相比，总投放转化率出现了差异，那么，作为指导业务决策的数据分析师，我们需要讲清楚：两次投放转化率的差异，有多少是来自于渠道占比变化的结果，又有多少是来自渠道本身转化率波动的结果。&#xA;构造一份演示数据：&#xA;dat &amp;lt;- data.frame( dim = c(&amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;, &amp;#34;E&amp;#34;), # 渠道名称 base_prop = c(0.2, 0.3, 0.1, 0.2, 0.2), # 上月(基期)各渠道用户数量占比 base_rate = c(0.1, 0.2, 0.15, 0.12, 0.05), # 上月(基期)各渠道用户转化率 curr_prop = c(0.25, 0.25, 0.15, 0.2, 0.15), # 本月(现期)各渠道用户数量占比 curr_rate = c(0.08, 0.15, 0.09, 0.1, 0.07) # 本月(现期)各渠道用户转化率 ) dat |&amp;gt; knitr::kable() dim base_prop base_rate curr_prop curr_rate A 0.2 0.10 0.25 0.08 B 0.3 0.20 0.25 0.15 C 0.</description>
    </item>
    <item>
      <title>漏斗指标归因</title>
      <link>https://www.xiebro.cool/post/lmdi/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/lmdi/</guid>
      <description>我们有一个结果指标新用户购买率Y，它由4个漏斗指标构成，分别为：新用户注册率A、注册用户激活率B、激活用户留存率C、留存用户购买率D。&#xA;即：Y = A x B x C x D&#xA;我们希望通过计算因子波动对结果指标Y的影响，来衡量这4个指标的重要性如何。&#xA;或是另外一个非常常见的工作场景，当Y发生了较大的波动，我们希望通过指标拆解，来清楚地说明各个因素的变动对整体的波动产生了什么样的影响。&#xA;# 创建一个包含基期和现期漏斗指标的示例数据框 set.seed(42) funnel_data &amp;lt;- data.frame(Indicator = c(&amp;#34;新用户注册率A&amp;#34;, &amp;#34;注册用户激活率B&amp;#34;, &amp;#34;激活用户留存率C&amp;#34;, &amp;#34;留存用户购买率D&amp;#34;), Base_Rate = runif(4, min = 0.1, max = 0.5), Current_Rate = runif(4, min = 0.1, max = 0.5) ) print(funnel_data) ## Indicator Base_Rate Current_Rate ## 1 新用户注册率A 0.4659224 0.3566982 ## 2 注册用户激活率B 0.4748302 0.3076384 ## 3 激活用户留存率C 0.2144558 0.3946353 ## 4 留存用户购买率D 0.4321791 0.1538666 LMDI（Logarithmic Mean Index Method）乘积因子拆解 library(dplyr) # 计算现期与基期结果指标Y的差异 Y0 &amp;lt;- prod(funnel_data$Base_Rate) Y1 &amp;lt;- prod(funnel_data$Current_Rate) Y_delta &amp;lt;- Y1 - Y0 # 计算平均对数权重 L &amp;lt;- Y_delta / (log(Y1) - log(Y0)) # 计算各指标在Y_delta中的贡献 C &amp;lt;- \(r0, r1) L * log(r1 / r0) # 计算各指标对整体变化率的贡献，即重要性 I &amp;lt;- \(C) C / Y_delta result &amp;lt;- funnel_data |&amp;gt; mutate(C = C(Base_Rate, Current_Rate), I = I(C)) result |&amp;gt; knitr::kable() Indicator Base_Rate Current_Rate C I 新用户注册率A 0.</description>
    </item>
    <item>
      <title>函数上的最大曲率点</title>
      <link>https://www.xiebro.cool/post/maximum-curvature/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/maximum-curvature/</guid>
      <description>在一些数据分析任务中，我们有时需要将数据拟合成曲线，并试图确定一个拐点来解释性质变化。那么，如何才能精确地找到这个拐点？&#xA;比如： 这里介绍R语言soilphysics包中的maxcurv()函数，来帮我们计算出函数曲线上的最大曲率点。&#xA;它的一般用法：&#xA;maxcurv(x.range, fun, method = c(&amp;#34;fd&amp;#34;, &amp;#34;pd&amp;#34;), graph = TRUE) # x.range: x 范围，一个包含两个元素的向量，表示曲线的取值范围。 # fun: 要计算曲率的函数，必须是一个可调用的 R 函数。 # method: 计算曲率的方法，可以是 &amp;#34;fd&amp;#34;（有限差分法）或 &amp;#34;pd&amp;#34;（抛物线拟合法）。 # graph: 是否显示计算过程的图形，默认为 TRUE。 返回值是一个列表，包含以下元素：&#xA;# x0: 最大曲率点的 x 坐标。 # y0: 最大曲率点的 y 坐标。 # curvature: 最大曲率点处的曲率值 原理：&#xA;对于给定的函数，首先在指定范围内生成足够密集的点。 根据指定的方法（有限差分法或抛物线拟合法），计算每个点处的曲率值。 找到曲率值最大的点，即为最大曲率点。 返回最大曲率点的坐标和曲率值。 示例1:&#xA;x_min = 1 x_max = 20 mc &amp;lt;- \(f) { soilphysics::maxcurv( x.range = c(x_min, x_max), fun = f, method = &amp;#34;pd&amp;#34;, graph = FALSE ) } # cubic cube &amp;lt;- \(x) 7424243 + (1.</description>
    </item>
    <item>
      <title>Kaplan-Meier生存分析</title>
      <link>https://www.xiebro.cool/post/survival-analysis/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/survival-analysis/</guid>
      <description>Kaplan-Meier生存分析：探索客户的生存概率随时间的变化，并可视化生存曲线，显示客户在不同时间点的生存概率。&#xA;数据集下载：Telco-Customer-Churn.csv&#xA;数据集概览 library(tidyverse) dat &amp;lt;- read.csv(&amp;#34;datasets/Telco-Customer-Churn.csv&amp;#34;) %&amp;gt;% mutate(churn = if_else(Churn == &amp;#34;Yes&amp;#34;, 1L, 0L)) dat %&amp;gt;% glimpse() ## Rows: 7,043 ## Columns: 22 ## $ customerID &amp;lt;chr&amp;gt; &amp;#34;7590-VHVEG&amp;#34;, &amp;#34;5575-GNVDE&amp;#34;, &amp;#34;3668-QPYBK&amp;#34;, &amp;#34;7795-CFOCW… ## $ gender &amp;lt;chr&amp;gt; &amp;#34;Female&amp;#34;, &amp;#34;Male&amp;#34;, &amp;#34;Male&amp;#34;, &amp;#34;Male&amp;#34;, &amp;#34;Female&amp;#34;, &amp;#34;Female&amp;#34;,… ## $ SeniorCitizen &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,… ## $ Partner &amp;lt;chr&amp;gt; &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes… ## $ Dependents &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;… ## $ tenure &amp;lt;int&amp;gt; 1, 34, 2, 45, 2, 8, 22, 10, 28, 62, 13, 16, 58, 49, 2… ## $ PhoneService &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, … ## $ MultipleLines &amp;lt;chr&amp;gt; &amp;#34;No phone service&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No phone service&amp;#34;, &amp;#34;… ## $ InternetService &amp;lt;chr&amp;gt; &amp;#34;DSL&amp;#34;, &amp;#34;DSL&amp;#34;, &amp;#34;DSL&amp;#34;, &amp;#34;DSL&amp;#34;, &amp;#34;Fiber optic&amp;#34;, &amp;#34;Fiber opt… ## $ OnlineSecurity &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;… ## $ OnlineBackup &amp;lt;chr&amp;gt; &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;N… ## $ DeviceProtection &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Y… ## $ TechSupport &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes… ## $ StreamingTV &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Ye… ## $ StreamingMovies &amp;lt;chr&amp;gt; &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes… ## $ Contract &amp;lt;chr&amp;gt; &amp;#34;Month-to-month&amp;#34;, &amp;#34;One year&amp;#34;, &amp;#34;Month-to-month&amp;#34;, &amp;#34;One … ## $ PaperlessBilling &amp;lt;chr&amp;gt; &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;Yes&amp;#34;, &amp;#34;No&amp;#34;, … ## $ PaymentMethod &amp;lt;chr&amp;gt; &amp;#34;Electronic check&amp;#34;, &amp;#34;Mailed check&amp;#34;, &amp;#34;Mailed check&amp;#34;, &amp;#34;… ## $ MonthlyCharges &amp;lt;dbl&amp;gt; 29.</description>
    </item>
    <item>
      <title>为了一口醋，包了一顿饺子</title>
      <link>https://www.xiebro.cool/post/2024-02-25-r-blogdown/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/2024-02-25-r-blogdown/</guid>
      <description>搭建这个Blog的起因是这样的&amp;hellip;&#xA;有次无意中刷到下面这个阿里云的活动，99元1年的云服务器，这个羊毛怎能有不薅的道理！？2核2G虽然干不了重活，但搭个blog绰绰有余，所以，为了这口醋，咱们今天就来包顿饺子(从服务器购买到网站上线)。 一、服务器准备 购买服务器 登录阿里云去购买云服务器，可以选择“99元活动产品”也可以根据自己的要求配置。 注意系统镜像选择Ubuntu，因为本教程是基于Ubuntu系统 安全组配置 在“选配”时或购买成功后进入“云服务器ECS”控制台-点击“实例名称”-“安全组”-“管理规则”-“快速添加” 添加安全组规则，开放必要的端口 账号权限配置 打开本地终端，ssh连接登录root账号 ssh root@xxx.xxx.xxx.xxx # xxx替换为你的服务器ip 创建一个用户(比如我的用户名：guowei) adduser guowei 设置用户密码 passwd guowei 分配管理员权限 # 进入权限配置文件 visudo 将用户添加到root下，配置与root相同权限并保存 退出root连接，之后可以使用新创建的用户登录&#xA;二、制作网站 在Rstudio中，使用blogdown包来快速建站，具体可以阅读blogdown说明文档，这里我们直接使用，不对包方法做详细解释，另外的前提假定是你已经有了一定的R语言编程基础。&#xA;安装blogdown install.packages(&amp;#39;blogdown&amp;#39;) 创建blogdown项目 上图中的Hugo theme是网站的主题模板，这里配置的是默认模板，你也可以到https://themes.gohugo.io 上选择自己喜欢的模板，比如本站点使用的是Paper这个主题，你可以进入主题点击“Download”进入项目。 而github的项目名称就是主题模板名称，你可以很方便的将模板名称替换到Hugo theme的配置里，比如： 预览网站&#xA;blogdown包提供了很多非常便利的功能，比如：&#xA;# 预览网站，并且可以实时预览网站修改效果 blogdown::serve_site() 修改网站 /content/post/路径下的文件就是文章内容了，如果要添加新文章可以使用Rstudio插件快捷创建 插件中也提供了很多其他的快捷功能，比如“插入图片”。 config.yaml是网站的配置文件，比如网站标题、社交账号等，可以根据自己需要做修改 themes/路径下的内容是模板设计相关的代码，如果想要修改，建议有一些前端开发的经验 生成网站 修改完毕后，现在我们可以生成静态网站了，blogdown包同样提供了非常方便的方法：&#xA;blogdown::build_site() 如果看到类似上图的输出，说明站点已经生成，此时你的项目中会出现一个public目录，该目录下的内容就是你的静态站点了。&#xA;所以，我们每次修改或添加完内容，都需要重新build_site()，&#xA;接下来，我们只需要将public部署到服务器端即可。&#xA;三、网站部署 服务器登录 ssh username@xxx.xxx.xxx.xxx 上传站点 把public目录上传到服务器的/data/wwwroot/目录下 scp -r yourpath/public/ yourname@xxx.xxx.xxx.xxx:/data/wwwroot # 如果服务器没有该目录，需要先创建 # 切到根目录后 sudo mkdir data/wwwroot 这一步也可以使用git把项目clone到服务器目录，之后修改内容会更加方便一些 Nginx sudo权限下安装nginx sudo apt install nginx 启动nginx服务 sudo systemctl start nginx 验证安装：打开Web浏览器，并访问服务器的IP地址，如果看到Nginx的欢迎页面，那么Nginx已经成功安装并运行。</description>
    </item>
  </channel>
</rss>
