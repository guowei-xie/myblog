<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>蒙特卡洛模拟 on 数据之道</title>
    <link>https://www.xiebro.cool/categories/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F/</link>
    <description>Recent content in 蒙特卡洛模拟 on 数据之道</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 25 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.xiebro.cool/categories/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A8%A1%E6%8B%9F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>蒙特卡洛模拟：猜猜篮子里有多少个苹果</title>
      <link>https://www.xiebro.cool/post/apple-basket/</link>
      <pubDate>Sun, 25 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://www.xiebro.cool/post/apple-basket/</guid>
      <description>问题场景 在一个桶里，有同等数量的红苹果与青苹果，但你并不知道具体数量。 你随机抽取了 19 个，发现拿了红苹果 8 个，青苹果 11 个。 针对刚才桶里苹果的总数量（红与青之和），最好的猜测是多少？ 注：为了卫生起见，拿出任何一个苹果后就不准再放回桶里。 这是一个参数估计的概率问题，具体来说是通过已知的样本信息来估计总体参数的值。&#xA;在这个情景中，我们知道从一个桶中抽取了19个苹果，其中8个是红色的，11个是青色的。我们并不知道桶中到底有多少个苹果，但我们想要估计红色和青色苹果的总数量。&#xA;因此，我们需要考虑在不同假设下（桶中红色苹果的数量），得到观察样本的概率。然后，我们找到使得这一概率最大化的假设，即我们的最佳估计。&#xA;换句话说就是：当篮子里有多少个苹果时，你有最大的概率会抽到8红11青。&#xA;所以我们可以通过蒙特卡洛模拟计算：&#xA;当篮子里有11个红(或青)苹果时（即总共22个），抽到8红11青的概率是p11 当篮子里有12个红(或青)苹果时（即总共24个），抽到8红11青的概率是p12 &amp;hellip;&amp;hellip; 当篮子里有n个红(或青)苹果时（即总共2n个），抽到8红11青的概率是pn Monte-Carlo Simulation library(purrr) # 场景复刻 nn_size = 19 nn_red = 8 nn_green = 11 # 生成一个装有2n个苹果的篮子(0:红, 1:青) generate_bin &amp;lt;- function(n) { rep.int(c(0L, 1L), n) } # 实验设计 run_experiment &amp;lt;- function(n, trials = 10e3) { if (n &amp;lt; max(nn_red, nn_green)) return(0L) reps &amp;lt;- replicate( trials, n |&amp;gt; # 生成篮子 generate_bin() |&amp;gt; # 随机不放回抽样 sample(size = nn_size, replace = FALSE) |&amp;gt; # 判断结果是否符合预期 sum() == nn_green ) # 预期结果出现的概率=预期结果出现的次数/总抽样次数 sum(reps) / trials } # 实验进行 set.</description>
    </item>
  </channel>
</rss>
